{
	"project": {
		"meta": {
			"refName": "rc-ultimate",
			"title": "RC Ultimate",
			"version": "v1.0",
			"description": "Universal Remote Control for my Projects",
			"github": "https://github.com/JanikThePanic/RC-Ultimate",
			"otherLink": ["", ""]
		},
		"content": [
			{
				"heading": "Overview",
				"text": "When creating projects and robots, no one likes to keep a cable connected at all times. It creates a feeling of something being unfinished, that your creation relies on something, that your precious peak of performance is limited by a simple length of a cable.",
				"image": "shot_irl.jpg",
				"caption": "Final Product"
			},
			{
				"text": "With that, I created a simple yet elegant solution to this problem, a universal remote control that can easily connect to any of my future projects. Bringing forward, the RC Ultimate. The RC Ultimate is the first design in a possible series of universal project controllers. Using the capabilities and size offered by the Arduino Nano, along with the range and ease of the nRF24L01, the RC Ultimate allows for easy implementation and set-up on the receiving end.",
				"splitter": ["render_no_top.png", "render_with_top.png"],
				"caption": "Slide the Slider to reveal the inside"
			},
			{
				"heading": "Circuit",
				"text": [
					"The circuit for this project is quite simple. For collecting input, switches, buttons, potentiometers, and joysticks were connected. Each button and switch is connected to an individual pin on the Arduino Nano. As for the analog inputs, the potentiometers and joysticks had Analog pins dedicated to them to read the input. Past that, the nRF24L01 is wired to the Arduino Nano according to its libraries’ documentations found on the",
					{
						"link": "https://www.arduino.cc/en/reference/SPI",
						"text": "Arduino Page on the SPI Library"
					},
					", and",
					{
						"link": "https://github.com/nRF24/RF24/blob/master/docs/arduino.md",
						"text": "nRF24’s RF24 library GitHub Repository"
					},
					"."
				]
			},
			{
				"text": [
					"As a power indicator, a 3mm Red LED was added with a 33k Ohms resistor. To power the whole controller, two",
					{
						"link": "https://data.energizer.com/pdfs/cr2032.pdf",
						"text": "CR2032"
					},
					" Lithium Coin batteries were wired in series to create 235mAh at a voltage of 6V. The batteries, after connecting to a power switch, are connected to the Arduino Nano’s raw power pins which then get regulated to a 5V for the rest of the circuit to use."
				]
			},
			{
				"text": "The circuit was connected via THT on a 2 layer 1.6mm PCB designed on EasyEDA and ordered through JLCPCB."
			},
			{
				"text": [
					"See the circuit diagram and PCB design on",
					{
						"link": "https://easyeda.com/jk4abdl/RC-Ultimate",
						"text": "EsayEDA"
					},
					"."
				],
				"image": "pcb.png",
				"caption": "Perspective view of the PCB with electric components"
			},
			{
				"heading": "Code",
				"text": "The RC Ulitmate utilizes the Arduino Nano as a microcontroller to read and send the collected values. Afterwards, the sent packets are picked up by another microcontroller over the 2.4 - 2.5 GHz ISM band using the nRF24L01 module. With that, there are two scripts written, one for the actual RC Ultimate as transmitter code, and the other as a demonstration of receiver code. Both scripts share a common Header File containing the structure of the packet being transmitted and received."
			},
			{
				"text": [
					"Both scripts make use of the",
					{
						"link": "https://www.arduino.cc/en/reference/SPI",
						"text": "SPI"
					},
					", nRF24L01, and",
					{
						"link": "https://github.com/nRF24/RF24",
						"text": "RF24"
					},
					" libraries for the purpose of communicating with the nRF24L01 module. As well, all code is written using the PlatformIO IDE, allowing for easier writing and troubleshooting."
				]
			},
			{
				"text": "The Transmitter code simply configures the nRF24L01 module, declares the structure of the packet, reads the values of the hardware, assigns the values to the structure, and writes it to the preset address."
			},
			{
				"text": "The Receiver code is made to create a demonstration of what the code on a receiving microcontroller can look like. At the moment, the demo code configures the nRF24L01 module, declares the structure of the packet, assigns the data read through the nRF24L01 to the declared structure, and prints the values over Serial."
			},
			{
				"text": [
					"View the code and its revisions on",
					{
						"link": "https://github.com/JanikThePanic/RC-Ultimate",
						"text": "GitHub"
					},
					"."
				]
			},
			{
				"heading": "Design",
				"text": "To manufacture the controller, a long printing time is required (and like anyone, I am impatient). With that, little time went into prototyping and the first iteration of CAD was used for the final product. Consequently, there are some flaws with the casing. Holding the controller seems rather cheap as it sits, to a certain degree, awkwardly in your hands. The curvature presented appears unnatural and fiddly. Lastly but most critically, to optimize printing times, the closure of the electronics consisted of a plate being able to unscrew at the surface. This, simply cutting corners and only designing for two screws means the plate can be lifted with a finger, bending the 3D print and damaging the design."
			},
			{
				"text": "If moving forward with further RC controllers, more time will be dedicated towards prototyping. As well, the CAD will be created using SolidWorks Surface Modeling techniques to provide for more natural and appealing curvature.",
				"cad": "https://www.3dcontentcentral.com/external-site-embed.aspx?format=3D&catalogid=171&modelid=1700095&width=250&height=250&edraw=true",
				"caption": "Interactive CAD viewer"
			},
			{
				"heading": "Parts List",
				"text": "Parts needed include:",
				"ul": [
					{
						"amount": 1,
						"link": "https://easyeda.com/jk4abdl/RC-Ultimate",
						"text": "Custom RC Ultimate PCB"
					},
					{
						"amount": 1,
						"text": "33k ohm Resistor"
					},
					{
						"amount": 1,
						"text": "3mm Red LED"
					},
					{
						"amount": 1,
						"link": "https://www.amazon.ca/gp/product/B071NMD14Y/ref=ppx_yo_dt_b_asin_title_o00_s00?ie=UTF8&psc=1",
						"text": "Arduino Nano"
					},
					{
						"amount": 2,
						"text": "2-56 Machine Screws 1/4 in"
					},
					{
						"amount": 2,
						"link": "https://www.amazon.ca/gp/product/B073RQYG1W/ref=ppx_yo_dt_b_asin_title_o00_s00?ie=UTF8&psc=1",
						"text": "3D Joysticks"
					},
					{
						"amount": 2,
						"link": "https://www.amazon.ca/gp/product/B01BWL7Z44/ref=ppx_yo_dt_b_asin_title_o00_s00?ie=UTF8&psc=1",
						"text": "MTS102 Toggle Switch"
					},
					{
						"amount": 3,
						"link": "https://www.amazon.ca/gp/product/B0827MJBFR/ref=ppx_yo_dt_b_asin_title_o00_s00?ie=UTF8&psc=1",
						"text": "Gebildet 6×6×8mm Momentary Tactile Push Buttons"
					},
					{
						"amount": 1,
						"link": "https://www.amazon.ca/gp/product/B007QAJUUS/ref=ppx_yo_dt_b_asin_title_o00_s01?ie=UTF8&psc=1",
						"text": "Slide Switch"
					},
					{
						"amount": 1,
						"link": "https://www.amazon.ca/WayinTop-NRF24L01-Transceiver-Regulator-Compatible/dp/B07PBBC4H9/ref=dp_prsubs_2?pd_rd_i=B07PBBC4H9&psc=1",
						"text": "NRF24L01+PA+LNA RF Transceiver Module"
					},
					{
						"amount": 2,
						"text": "Potentiometers"
					},
					{
						"amount": 1,
						"link": "https://www.amazon.ca/LAMPVPATH-CR2032-Battery-Holder-Mounting/dp/B08SQRSTJ4/ref=sr_1_5?dchild=1&gclid=Cj0KCQjw-4SLBhCVARIsACrhWLUiEX4hIWJOjO9g3Hd8Q4bLeBT4DrDaPraCGw90jh8WBw5PmDJH4XkaAh3BEALw_wcB&hvadid=208220727753&hvdev=c&hvlocphy=9001026&hvnetw=g&hvqmt=e&hvrand=5205798823545438086&hvtargid=kwd-320569047514&hydadcr=28072_9824520&keywords=coin+battery+holder&qid=1633827311&sr=8-5",
						"text": "CR2032 Coin Battery Holders"
					},
					{
						"amount": 1,
						"text": "10uf Decoupling Capacitor"
					}
				]
			},
			{
				"heading": "Inspiration",
				"text": "The main existence of this project came less from inspiration and more from a need. When creating or testing out projects, taking them wireless always posed a difficulty. Most commercial wireless solutions consisted of 2.4GHz Transmitters costing easily over 60$ CAD. With that, I created the remote to act as a cheap yet viable universal entity that can be connected to any project by just simply wiring an NRF24L01."
			},
			{
				"text": "The following resources were used as a basis for the project:",
				"ul": [
					{
						"link": "https://www.youtube.com/watch?v=bD7rQbnSbek",
						"text": "Youtube Video I Watched Once"
					},
					{
						"link": "https://www.youtube.com/watch?v=-BDCmwNssiw",
						"text": "None Other Than How To Mechatronics"
					}
				]
			},
			{
				"heading": "Conclusion",
				"text": "To summarize, I would call the project a success. Although not fully satisfied with the design of the physical controller, it has set the groundwork for any similar projects that may come afterwards. For example, if needed, I would like to create a smaller version in the style of a Nintendo Switch Controller, with a single 2D joystick and a minimal amount of buttons."
			}
		]
	}
}
